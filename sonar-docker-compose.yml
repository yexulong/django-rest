version: '2'
services:
    postgres:
      image: 'postgres:latest'
      container_name: 'postgres'
      restart: unless-stopped
      privileged: true
      environment:
        TZ: 'Asia/Shanghai'
        POSTGRES_USER: 'sonar'
        POSTGRES_PASSWORD: 'sonar'
        POSTGRES_DB: 'sonar'
      ports:
        - '5432:5432'
      volumes:
        - /home/sonar/postgres/postgresql:/var/lib/postgresql
        - /home/sonar/postgres/data:/var/lib/postgresql/data
        - /etc/localtime:/etc/localtime:ro
      networks:
        - sonarqube-tier
    
    sonar:
      image: 'sonarqube:8.7-community'
      container_name: 'sonar'
      restart: unless-stopped
      privileged: true
      environment:
        ALLOW_EMPTY_PASSWORD: 'yes'
        SONARQUBE_DATABASE_USER: 'sonar'
        SONARQUBE_DATABASE_NAME: 'sonar'
        SONARQUBE_DATABASE_PASSWORD: 'sonar'
        SONARQUBE_JDBC_URL: 'jdbc:postgresql://postgres:5432/sonar'
      ports:
        - '9090:9000'
      volumes:
        - /data/sonarqube/logs:/opt/sonarqube/logs
        - /data/sonarqube/conf:/opt/sonarqube/conf
        - /data/sonarqube/data:/opt/sonarqube/data
        - /data/sonarqube/extensions:/opt/sonarqube/extensions
      depends_on:
        - postgres
      networks:
        - sonarqube-tier
        
    # sonar-scanner:
      # image: 'sonarsource/sonar-scanner-cli'
      # container_name: 'sonar-scanner'
      # restart: unless-stopped
      # privileged: true
      # environment:
        # SONAR_HOST_URL: 'http://192.168.56.104:9090'
        # SONAR_LOGIN: '30a08cd5c85e798058453369bd30256f820fc031'
      # volumes:
        # - '/home/test/test_pro/api-automation-test:/usr/src'
      # networks:
        # - sonarqube-tier
#volumes:
    # config:
    # data:
    # logs:
    
networks:
    sonarqube-tier:
